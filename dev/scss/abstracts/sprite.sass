// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$enter-icon-name: 'enter-icon'
$enter-icon-x: 27px
$enter-icon-y: 23px
$enter-icon-offset-x: -27px
$enter-icon-offset-y: -23px
$enter-icon-width: 15px
$enter-icon-height: 15px
$enter-icon-total-width: 62px
$enter-icon-total-height: 38px
$enter-icon-image: 'sprite.png'
$enter-icon: (27px, 23px, -27px, -23px, 15px, 15px, 62px, 38px, 'sprite.png', 'enter-icon', )
$online-icon-name: 'online-icon'
$online-icon-x: 27px
$online-icon-y: 0px
$online-icon-offset-x: -27px
$online-icon-offset-y: 0px
$online-icon-width: 20px
$online-icon-height: 23px
$online-icon-total-width: 62px
$online-icon-total-height: 38px
$online-icon-image: 'sprite.png'
$online-icon: (27px, 0px, -27px, 0px, 20px, 23px, 62px, 38px, 'sprite.png', 'online-icon', )
$phone-header-icon-name: 'phone-header-icon'
$phone-header-icon-x: 0px
$phone-header-icon-y: 0px
$phone-header-icon-offset-x: 0px
$phone-header-icon-offset-y: 0px
$phone-header-icon-width: 27px
$phone-header-icon-height: 38px
$phone-header-icon-total-width: 62px
$phone-header-icon-total-height: 38px
$phone-header-icon-image: 'sprite.png'
$phone-header-icon: (0px, 0px, 0px, 0px, 27px, 38px, 62px, 38px, 'sprite.png', 'phone-header-icon', )
$reg-icon-name: 'reg-icon'
$reg-icon-x: 47px
$reg-icon-y: 0px
$reg-icon-offset-x: -47px
$reg-icon-offset-y: 0px
$reg-icon-width: 15px
$reg-icon-height: 15px
$reg-icon-total-width: 62px
$reg-icon-total-height: 38px
$reg-icon-image: 'sprite.png'
$reg-icon: (47px, 0px, -47px, 0px, 15px, 15px, 62px, 38px, 'sprite.png', 'reg-icon', )
$search-icon-name: 'search-icon'
$search-icon-x: 47px
$search-icon-y: 15px
$search-icon-offset-x: -47px
$search-icon-offset-y: -15px
$search-icon-width: 12px
$search-icon-height: 12px
$search-icon-total-width: 62px
$search-icon-total-height: 38px
$search-icon-image: 'sprite.png'
$search-icon: (47px, 15px, -47px, -15px, 12px, 12px, 62px, 38px, 'sprite.png', 'search-icon', )
$spritesheet-width: 62px
$spritesheet-height: 38px
$spritesheet-image: 'sprite.png'
$spritesheet-sprites: ($enter-icon, $online-icon, $phone-header-icon, $reg-icon, $search-icon, )
$spritesheet: (62px, 38px, 'sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(../images/#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
